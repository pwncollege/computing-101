char buffer[4096];

int main()
{
    int result;
    int fds[256];
    char input[4096];

    {% for operation in operations %}
    {% if operation.type == "open" %}
    result = open("{{ operation.path }}", O_RDONLY);
    if (result < 0) {
        perror("open");
        return 1;
    }
    fds[{{ loop.index0 }}] = result;
    {% elif operation.type == "read" %}
    result = read(fds[{{ operation.fd }}], &buffer[{{ operation.offset }}], {{ operation.size }});
    if (result < 0) {
        perror("read");
        return 1;
    }
    {% elif operation.type == "write" %}
    result = write(STDOUT_FILENO, &buffer[{{ operation.offset }}], {{ operation.size }});
    if (result < 0) {
        perror("write");
        return 1;
    }
    {% elif operation.type == "close" %}
    result = close(fds[{{ operation.fd }}]);
    if (result < 0) {
        perror("close");
        return 1;
    }
    {% elif operation.type == "cmp" %}
    printf("%s", "{{ operation.prompt }}");
    read(STDIN_FILENO, input, {{ operation.size }} + 1);
    if (memcmp(input, &buffer[{{ operation.offset }}], {{ operation.size }}) != 0) {
        puts("Incorrect\n");
        return 1;
    } else {
        puts("Correct\n");
    }
    {% endif %}

    int flag_fd = open("/flag", O_RDONLY);
    if (flag_fd < 0) {
        perror("open /flag");
        return 1;
    }

    int flag_length = read(flag_fd, buffer, 4096);
    if (flag_length < 0) {
        perror("read /flag");
        return 1;
    }

    flag_length = write(STDOUT_FILENO, buffer, flag_length);
    if (flag_length < 0) {
        perror("write /flag");
        return 1;
    }

    return 0;
}